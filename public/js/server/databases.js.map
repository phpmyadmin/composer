{"version":3,"file":"server/databases.js","mappings":"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","sources":["webpack://phpmyadmin/./resources/js/server/databases.ts","webpack://phpmyadmin/external var \"jQuery\""],"sourcesContent":["import $ from 'jquery';\nimport { AJAX } from '../modules/ajax.ts';\nimport { prepareForAjaxRequest } from '../modules/functions.ts';\nimport { Navigation } from '../modules/navigation.ts';\nimport { CommonParams } from '../modules/common.ts';\nimport { ajaxShowMessage } from '../modules/ajax-message.ts';\nimport getJsConfirmCommonParam from '../modules/functions/getJsConfirmCommonParam.ts';\nimport { escapeHtml } from '../modules/functions/escape.ts';\nimport refreshMainContent from '../modules/functions/refreshMainContent.ts';\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n */\nconst DropDatabases = {\n    /**\n     * @param {Event} event\n     */\n    handleEvent: function (event) {\n        event.preventDefault();\n        var $form = $(this);\n        /**\n         * @var selected_dbs Array containing the names of the checked databases\n         */\n        var selectedDbs = [];\n        // loop over all checked checkboxes, except the .checkall_box checkbox\n        $form.find('input:checkbox:checked:not(.checkall_box)').each(function () {\n            $(this).closest('tr').addClass('removeMe');\n            selectedDbs[selectedDbs.length] = 'DROP DATABASE `' + escapeHtml($(this).val()) + '`;';\n        });\n        if (!selectedDbs.length) {\n            ajaxShowMessage($('<div class=\"alert alert-warning\" role=\"alert\"></div>').text(window.Messages.strNoDatabasesSelected), 2000);\n            return;\n        }\n        /**\n         * @var question    String containing the question to be asked for confirmation\n         */\n        var question = window.Messages.strDropDatabaseStrongWarning + ' ' +\n            window.sprintf(window.Messages.strDoYouReally, selectedDbs.join('<br>'));\n        const modal = $('#dropDatabaseModal');\n        modal.find('.modal-body').html(question);\n        modal.modal('show');\n        const url = 'index.php?route=/server/databases/destroy&' + $(this).serialize();\n        $('#dropDatabaseModalDropButton').on('click', function () {\n            ajaxShowMessage(window.Messages.strProcessingRequest, false);\n            var parts = url.split('?');\n            var params = getJsConfirmCommonParam(this, parts[1]);\n            $.post(parts[0], params, function (data) {\n                if (typeof data !== 'undefined' && data.success === true) {\n                    ajaxShowMessage(data.message);\n                    var $rowsToRemove = $form.find('tr.removeMe');\n                    var $databasesCount = $('#filter-rows-count');\n                    var newCount = parseInt($databasesCount.text(), 10) - $rowsToRemove.length;\n                    $databasesCount.text(newCount);\n                    $rowsToRemove.remove();\n                    $form.find('tbody').sortTable('.name');\n                    if ($form.find('tbody').find('tr').length === 0) {\n                        // user just dropped the last db on this page\n                        refreshMainContent();\n                    }\n                    Navigation.reload();\n                }\n                else {\n                    $form.find('tr.removeMe').removeClass('removeMe');\n                    ajaxShowMessage(data.error, false);\n                }\n            });\n            modal.modal('hide');\n            $('#dropDatabaseModalDropButton').off('click');\n        });\n    }\n};\n/**\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n */\nconst CreateDatabase = {\n    /**\n     * @param {Event} event\n     */\n    handleEvent: function (event) {\n        event.preventDefault();\n        var $form = $(this);\n        // TODO Remove this section when all browsers support HTML5 \"required\" property\n        var newDbNameInput = $form.find('input[name=new_db]');\n        if (newDbNameInput.val() === '') {\n            newDbNameInput.trigger('focus');\n            alert(window.Messages.strFormEmpty);\n            return;\n        }\n        // end remove\n        ajaxShowMessage(window.Messages.strProcessingRequest);\n        prepareForAjaxRequest($form);\n        $.post($form.attr('action'), $form.serialize(), function (data) {\n            if (typeof data !== 'undefined' && data.success === true) {\n                ajaxShowMessage(data.message);\n                var $databasesCountObject = $('#filter-rows-count');\n                var databasesCount = parseInt($databasesCountObject.text(), 10) + 1;\n                $databasesCountObject.text(databasesCount);\n                Navigation.reload();\n                // make ajax request to load db structure page - taken from ajax.js\n                var dbStructUrl = data.url;\n                dbStructUrl = dbStructUrl.replace(/amp;/ig, '');\n                var params = 'ajax_request=true' + CommonParams.get('arg_separator') + 'ajax_page_request=true';\n                $.get(dbStructUrl, params, AJAX.responseHandler);\n            }\n            else {\n                ajaxShowMessage(data.error, false);\n            }\n        });\n    }\n};\nAJAX.registerTeardown('server/databases.js', function () {\n    $(document).off('submit', '#dbStatsForm');\n    $(document).off('submit', '#create_database_form.ajax');\n});\nAJAX.registerOnload('server/databases.js', function () {\n    $(document).on('submit', '#dbStatsForm', DropDatabases.handleEvent);\n    $(document).on('submit', '#create_database_form.ajax', CreateDatabase.handleEvent);\n});\n","module.exports = jQuery;"],"names":["$","AJAX","prepareForAjaxRequest","Navigation","CommonParams","ajaxShowMessage","getJsConfirmCommonParam","escapeHtml","refreshMainContent","DropDatabases","handleEvent","event","preventDefault","$form","selectedDbs","find","each","closest","addClass","length","val","text","window","Messages","strNoDatabasesSelected","question","strDropDatabaseStrongWarning","sprintf","strDoYouReally","join","modal","html","url","serialize","on","strProcessingRequest","parts","split","params","post","data","success","message","$rowsToRemove","$databasesCount","newCount","parseInt","remove","sortTable","reload","removeClass","error","off","CreateDatabase","newDbNameInput","trigger","alert","strFormEmpty","attr","$databasesCountObject","databasesCount","dbStructUrl","replace","get","responseHandler","registerTeardown","document","registerOnload"],"sourceRoot":""}