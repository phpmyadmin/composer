dist: xenial

language: php

stages:
  - name: "Lint and analyse code"
  - name: "PHP Unit tests"
  - name: "Other tests"
  - name: "Documentation"

install:
  - nvm install 10
  - composer install --no-interaction
  - yarn install --non-interactive

services:
  - mysql

cache:
  pip: true
  yarn: true
  directories:
    - $HOME/.composer/cache/
    - node_modules

jobs:
  allow_failures:
    - php: nightly
    - os: osx
    # https://github.com/phpmyadmin/phpmyadmin/issues/16479
    - name: "Run selenium tests on Google Chrome"

  include:
    - stage: "PHP Unit tests"
      php: nightly
      name: "PHP nightly"
      env: CI_MODE=test
      install:
        - composer install --no-interaction --ignore-platform-reqs
        - nvm install 10
        - yarn install --non-interactive

    - stage: "PHP Unit tests"
      name: "OSX"
      os: osx
      env: CI_MODE=test
      language: node_js
      node_js: 10
      before_install:
        - export PATH="/usr/local/opt/gettext/bin:$PATH"
        - echo "memory_limit=-1" > /usr/local/etc/php/7.4/conf.d/50-travis.ini
        - echo "pcre.jit=0" >> /usr/local/etc/php/7.4/conf.d/50-travis.ini
        - mysql.server start
        - sleep 5
        # Enable password access
        - mysql -e "SET PASSWORD FOR 'root'@'localhost' = PASSWORD('');"
      addons:
        homebrew:
          packages:
            - php
            - composer
            - mariadb
          update: true

    - stage: "PHP Unit tests"
      name: "Windows"
      os: windows
      language: node_js
      node_js: 10
      env:
        - CI_MODE=test
        - YARN_GPG=no
      install:
        - composer install --no-interaction --ignore-platform-reqs
        - yarn install --non-interactive
      before_install:
        - choco install php composer
        - choco install mariadb --version=10.4.8
        - export PATH=/c/tools/php80:/c/ProgramData/ComposerSetup/bin:/c/"Program Files"/"MariaDB 10.4"/bin:$PATH
        - PHP_EXTENSIONS="mysqli curl bz2 gd2 pdo_mysql"
        - for php_ext in $PHP_EXTENSIONS ; do sed -i -e "s/^;extension=${php_ext}/extension=${php_ext}/" /c/tools/php80/php.ini ; done
        - sed -i -e 's/^memory_limit = .*/memory_limit = -1/' /c/tools/php80/php.ini

    - stage: "Other tests"
      name: "Run selenium tests on Google Chrome"
      env:
        - CI_MODE=selenium
        - TESTSUITE_SELENIUM_BROWSER=chrome
        - TESTSUITE_USER=root
        - TESTSUITE_URL=http://127.0.0.1:8000
        - TESTSUITE_SERVER="127.0.0.1"
        - TESTSUITE_DATABASE="selenium"
        - TESTSUITE_SELENIUM_HOST="127.0.0.1"
        - TESTSUITE_SELENIUM_PORT="4444"
        - SKIP_STANDALONE=1
      before_install:
        - docker run -d -e SCREEN_WIDTH=1920 -e SCREEN_HEIGHT=1080 --rm --name=selenium --net=host -v /dev/shm:/dev/shm selenium/standalone-chrome:3.141.59
        - phpenv config-rm xdebug.ini
        - cp test/config.e2e.inc.php config.inc.php
      before_script:
        - export TESTSUITE_PASSWORD=`openssl rand -base64 30`
        - mysql -uroot -e "CREATE DATABASE IF NOT EXISTS test"
        - mysql -uroot < sql/create_tables.sql
        - mysql -uroot -e "SET PASSWORD = PASSWORD('$TESTSUITE_PASSWORD')"
        - ./test/start-local-server
      script: ./vendor/bin/phpunit --no-coverage --group selenium --verbose --debug
      after_script:
        - if [ -f php.log ] ; then cat php.log ; fi
        - if [ -f nginx-error.log ] ; then cat nginx-error.log ; fi
        - if [ -f config.inc.php ] ; then rm -rf config.inc.php; fi
        - ./test/stop-local-server
        - docker logs selenium
        - docker stop selenium
      services:
        - docker
        - mysql
      addons:
        apt:
          packages:
            - nginx
